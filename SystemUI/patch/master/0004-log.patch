From 65502f684dfd60f334d00d794360875e1852a315 Mon Sep 17 00:00:00 2001
From: weiliji <weiliji@qucii.com>
Date: Sun, 5 Feb 2017 19:02:13 +0800
Subject: [PATCH 004/185] =?UTF-8?q?=E3=80=90=E4=BF=AE=E6=94=B9=E3=80=91?=
 =?UTF-8?q?=E6=B7=BB=E5=8A=A0=E7=9B=B8=E5=85=B3log=E4=BF=A1=E6=81=AF?=
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

---
 SystemUI/build.xml                                 | 506 +++++++++++++++++++++
 ...dows--\351\200\232\347\237\245\346\240\217.xml" |   3 +-
 .../src/com/android/systemui/qs/tiles/DndTile.java |   2 +
 .../statusbar/phone/NotificationPanelView.java     |  25 +-
 .../phone/NotificationsQuickSettingsContainer.java |   2 +-
 .../systemui/statusbar/phone/PanelView.java        |  17 +-
 .../systemui/statusbar/phone/QSTileHost.java       |   1 +
 SystemUI/sysui-push.sh                             |   7 +-
 8 files changed, 549 insertions(+), 14 deletions(-)
 create mode 100644 SystemUI/build.xml

diff --git a/SystemUI/build.xml b/SystemUI/build.xml
new file mode 100644
index 0000000..6a350e9
--- /dev/null
+++ b/SystemUI/build.xml
@@ -0,0 +1,506 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project name="SystemUI" default="debug">
+    <!-- The local.properties file is created and updated by the 'android' tool.
+         It contains the path to the SDK. It should *NOT* be checked into
+         Version Control Systems. -->
+    <!-- <property file="local.properties" /> -->
+
+    <!-- The ant.properties file can be created by you. It is only edited by the
+         'android' tool to add properties to it.
+         This is the place to change some Ant specific build properties.
+         Here are some properties you may want to change/update:
+
+         source.dir
+             The name of the source directory. Default is 'src'.
+         out.dir
+             The name of the output directory. Default is 'bin'.
+
+         For other overridable properties, look at the beginning of the rules
+         files in the SDK, at tools/ant/build.xml
+
+         Properties related to the SDK location or the project target should
+         be updated using the 'android' tool with the 'update' action.
+
+         This file is an integral part of the build system for your
+         application and should be checked into Version Control Systems.
+
+         -->
+    <!-- <property file="ant.properties" /> -->
+
+    <!-- if sdk.dir was not set from one of the property file, then
+         get it from the ANDROID_HOME env var.
+         This must be done before we load project.properties since
+         the proguard config can use sdk.dir -->
+    <property environment="env" />
+    <!-- <condition property="sdk.dir" value="${env.ANDROID_HOME}">
+        <isset property="env.ANDROID_HOME" />
+    </condition> -->
+
+    <!-- The project.properties file is created and updated by the 'android'
+         tool, as well as ADT.
+
+         This contains project specific properties such as project target, and library
+         dependencies. Lower level build properties are stored in ant.properties
+         (or in .classpath for Eclipse projects).
+
+         This file is an integral part of the build system for your
+         application and should be checked into Version Control Systems. -->
+    <!-- <loadproperties srcFile="project.properties" /> -->
+
+    <!-- quick check on sdk.dir -->
+    <!-- <fail
+            message="sdk.dir is missing. Make sure to generate local.properties using 'android update project' or to inject it through the ANDROID_HOME environment variable."
+            unless="sdk.dir"
+    /> -->
+
+    <!--
+        Import per project custom build rules if present at the root of the project.
+        This is the place to put custom intermediary targets such as:
+            -pre-build
+            -pre-compile
+            -post-compile (This is typically used for code obfuscation.
+                           Compiled code location: ${out.classes.absolute.dir}
+                           If this is not done in place, override ${out.dex.input.absolute.dir})
+            -post-package
+            -post-build
+            -pre-clean
+    -->
+    <!-- <import file="custom_rules.xml" optional="true" /> -->
+
+    <!-- Import the actual build file.
+
+         To customize existing targets, there are two options:
+         - Customize only one target:
+             - copy/paste the target into this file, *before* the
+               <import> task.
+             - customize it to your needs.
+         - Customize the whole content of build.xml
+             - copy/paste the content of the rules files (minus the top node)
+               into this file, replacing the <import> task.
+             - customize to your needs.
+
+         ***********************
+         ****** IMPORTANT ******
+         ***********************
+         In all cases you must update the value of version-tag below to read 'custom' instead of an integer,
+         in order to avoid having your file be overridden by tools such as "android update project"
+    -->
+    <!-- version-tag: 1 -->
+    <!-- <import file="${sdk.dir}/tools/ant/build.xml" /> -->
+<!-- 应用名称 -->  
+    <property name="appName" value="${ant.project.name}"/>  
+    <!-- SDK目录(获取操作系统环境变量ANDROID_SDK_HOME的便 -->  
+    <property name="sdk-folder" value="D:/Tools/Android/adt-bundle-windows-x86_64-20140702/sdk" />  
+    <!--  <property name="sdk-folder" value="${env.Android_SDK_HOME}" />   -->    
+    <!-- SDK指定平台目录 -->  
+    <property name="sdk-platform-folder" value="${sdk-folder}/platforms/android-23"/>  
+    <!-- SDK中tools目录 -->  
+    <property name="sdk-tools" value="${sdk-folder}/tools" />  
+    <!-- SDK指定平台中tools目录 -->  
+    <property name="sdk-platform-tools" value="${sdk-folder}/build-tools/23.0.3" />  
+    <!-- 第三方引用的工程目录 -->  
+  	<property name="library-dir1" value="../Keyguard" />
+	<property name="library-dir2" value="../SettingsLib" />
+  	<!-- 混淆配置 -->
+    <property name="proguard-home" value="${sdk-tools}/proguard/lib"/>
+	
+    <!-- 使用到的命令(当前系统为windows,如果系统为linux,可将.bat文件替换成相对应的命乿 -->  
+     <property name="aapt" value="${sdk-platform-tools}/aapt.exe" />  
+    <property name="aidl" value="${sdk-platform-tools}/aidl.exe" />  
+    <property name="dx" value="${sdk-platform-tools}/dx.bat" />  
+    <property name="jarsigner" value="${env.JAVA_HOME}/bin/jarsigner.exe" />  
+    <property name="Javacpath" value="${env.JAVA_HOME}/bin/javac.exe" />
+    <!-- 编译需要的jar; 如果项目使用到地图服务则需要maps.jar -->  
+    <property name="android-jar" value="${sdk-platform-folder}/android.jar" />  
+<!--     <property name="android-maps-jar" value="${sdk-folder}/add-ons/addon_google_apis_google_inc_8/libs/maps.jar"/>   -->
+      
+    <!-- 编译aidl文件所需的预处理框架文件framework.aidl -->  
+    <property name="framework-aidl" value="${sdk-platform-folder}/framework.aidl" />  
+  
+    <!-- 生成R文件的相对目录-->  
+    <property name="outdir-gen" value="gen" />  
+    <!-- 编译后的文件放置目录 -->  
+    <property name="outdir-bin" value="bin" />  
+      
+    <!-- 清单文件 -->  
+    <property name="manifest-xml" value="AndroidManifest.xml" />  
+    <!-- 源文件目录-->  
+    <property name="resource-dir" value="res" />  
+    <property name="asset-dir" value="assets" />  
+    <!-- java源文件目录-->  
+    <property name="srcdir" value="src" />  
+    <property name="srcdir-ospath" value="${basedir}/${srcdir}" />  
+    <!-- 外部类库所在目录-->  
+    <property name="external-lib" value="libs" />  
+    <property name="ext-lib" value="ext_libs" />  
+
+    <property name="external-lib-ospath" value="${basedir}/${external-lib}" /> 
+    <!-- 生成class目录 -->  
+    <property name="outdir-classes" value="${outdir-bin}/classes" />  
+    <property name="outdir-classes-ospath" value="${basedir}/${outdir-classes}" />  
+  
+    <!-- classes.dex相关变量 -->  
+    <property name="dex-file" value="classes.dex" />  
+    <property name="dex-path" value="${outdir-bin}/${dex-file}" />  
+    <property name="dex-ospath" value="${basedir}/${dex-path}" />  
+  
+    <!-- 经过aapt生成的资源包文件 -->  
+    <property name="resources-package" value="${outdir-bin}/resources.ap_" />  
+    <property name="resources-package-ospath" value="${basedir}/${resources-package}" />  
+      
+    <!-- 未认证apk势-->  
+    <property name="out-unsigned-package" value="${outdir-bin}/${appName}-unsigned.apk" />  
+    <property name="out-unsigned-package-ospath" value="${basedir}/${out-unsigned-package}" />  
+      
+    <!-- 证书文件 -->  
+    <property name="sign-folder" value="ext_libs/security" /> 
+    <property name="keystore-file" value="${sign-folder}/platform.keystore" />
+    <property name="keystore-debug-file" value="${sign-folder}/platform.keystore" />
+    <property name="keystore-jar" value="${sign-folder}/signapk.jar" /> 
+    <property name="keystore-pk8" value="${sign-folder}/platform.pk8" /> 
+    <property name="keystore-pem" value="${sign-folder}/platform.x509.pem" />    
+    <!-- 已认证apk势-->  
+    <property name="out-signed-package" value="${outdir-bin}/${appName}.apk" />  
+    <property name="out-signed-package-ospath" value="${basedir}/${out-signed-package}" />
+    
+    <path id="libs_classpath">
+        <fileset dir="${external-lib}">
+         	<include name="*.jar" />
+         </fileset> 
+    </path>
+    
+     <path id="lib_classpath">
+         <!-- <fileset dir="${jar-path}" includes="*.jar" /> -->
+		<fileset dir="${ext-lib}">
+<!-- 
+		    <include name="core-libart.jar" />
+         	<include name="framework.jar" />
+         	<include name="services.jar" />
+         	<include name="telephony-common.jar" />
+ -->    	
+         	<include name="android-support-v4.jar" />
+         	<include name="core-libart.jar" />
+			<include name="frameworks.jar" />
+         	<include name="javalib.jar" />
+			<include name="service.jar" />
+         	<include name="telephony-common.jar" />
+         </fileset>
+        <path refid="libs_classpath"/>
+         <pathelement location="${android-jar}" />
+ 
+	</path>
+    
+    <!-- 初始化工仿-->  
+    <target name="init">  
+        <echo>Initializing all output directories...</echo>  
+        <delete dir="${outdir-classes}" />  
+        <delete dir="${outdir-bin}" />  
+        <delete dir="${outdir-gen}" />
+        <mkdir dir="${outdir-gen}" />
+        <mkdir dir="${outdir-bin}" />  
+        <mkdir dir="${outdir-classes}" />  
+    </target>
+    
+    <!-- 根据工程中的资源文件生成R.java文件  -->  
+    <target name="gen-R" depends="init">  
+        <echo>Generating R.java from the resources...</echo>  
+        <exec executable="${aapt}" failonerror="true">  
+            <arg value="package" />  <!-- package表示打包-->
+            <arg value="-f" />
+            <arg value="-m" />  <!--m,J,gen表示创建包名的目录和R.java到gen目录䶿-->
+            <arg value="-J" />  
+            <arg value="${outdir-gen}" />  
+            <arg value="-M" />  
+            <arg value="${manifest-xml}" />  
+            <arg value="-S" />  <!-- S指定res目录，生成对应的ID，可多个-->
+            <arg value="${resource-dir}" />  
+            <arg value="-S" />
+            <arg value="${library-dir1}/res" /><!-- 注意瀿同时需要调用Library的res-->
+			<arg value="-S" />
+            <arg value="${library-dir2}/res" />
+            <arg value="-I" />  <!-- I指定android包的位置-->
+            <arg value="${android-jar}" />  
+            <arg value="--auto-add-overlay" /> <!-- 这个重要，覆盖资源，不然报错-->
+        </exec>  
+        <!-- 根据库应用中的资源文件生成R.java文件 -->
+        <exec executable="${aapt}" failonerror="true">
+            <arg value="package" />
+            <arg value="-f" />
+            <arg value="-m" />
+            <arg value="--auto-add-overlay" />
+            <arg value="-J" />
+            <arg value="${outdir-gen}" />
+            <arg value="-M" />
+            <arg value="${library-dir1}/AndroidManifest.xml" /><!-- 库应用的manifest-->
+            <arg value="-S" />
+            <arg value="${resource-dir}" />
+            <arg value="-S" />
+            <arg value="${library-dir1}/res" />
+			<arg value="-S" />
+            <arg value="${library-dir2}/res" />
+            <arg value="-I" />
+            <arg value="${android-jar}" />
+        </exec>
+		<exec executable="${aapt}" failonerror="true">
+            <arg value="package" />
+            <arg value="-f" />
+            <arg value="-m" />
+            <arg value="--auto-add-overlay" />
+            <arg value="-J" />
+            <arg value="${outdir-gen}" />
+            <arg value="-M" />
+            <arg value="${library-dir2}/AndroidManifest.xml" /><!-- 搴撳簲鐢ㄧ殑manifest-->
+            <arg value="-S" />
+            <arg value="${resource-dir}" />
+            <arg value="-S" />
+            <arg value="${library-dir1}/res" />
+			<arg value="-S" />
+            <arg value="${library-dir2}/res" />
+            <arg value="-I" />
+            <arg value="${android-jar}" />
+        </exec>
+    </target>  
+    
+    <!-- 编译aidl文件 -->  
+    <target name="aidl" depends="gen-R">  
+        <echo>Compiling .aidl into java files...</echo>  
+        <apply executable="${aidl}" failonerror="true">  
+            <!-- 指定预处理文乿-->  
+            <arg value="-p${framework-aidl}"/>  
+            <!-- aidl声明的目录-->  
+            <arg value="-I${srcdir}"/>  
+            <!-- 目标文件目录 -->  
+            <arg value="-o${outdir-gen}"/>  
+            <!-- 指定哪些文件需要编譿-->  
+            <fileset dir="${srcdir}">  
+                <include name="**/*.aidl"/>  
+            </fileset>  
+        </apply>  
+    </target>  
+    
+    <!-- 将工程中的java源文件编译成class文件 -->  
+    <target name="compile" depends="aidl">  
+        <echo>Compiling java source code...</echo>  
+        <javac  encoding="ISO-8859-1" target="1.7"  destdir="${outdir-classes}"  includeantruntime="true"> 
+            <!-- 库应用源瞿--> 
+             <src path="${library-dir1}/src" /><!-- 库应用源瞿-->
+			 <src path="${library-dir2}/src" />
+            <src path="${srcdir-ospath}"/>
+	        <src path="${outdir-gen}"/>
+	        <classpath refid="lib_classpath"/>
+        </javac>  
+         
+    </target>  
+    <!-- 混淆代码 -->
+    <target name="proguard" depends="compile" >
+     <echo>Proguad classes....</echo>
+        <jar basedir="${outdir-classes}" destfile="temp.jar" />
+        <java  failonerror="true" fork="true"  jar="${proguard-home}/proguard.jar" >
+            <jvmarg value="-Dmaximum.inlined.code.length=32" />
+            <!-- jar包所在地址 -->
+            <arg value="-injars temp.jar" />
+            <!-- 输出地址 -->
+            <arg value="-outjars optimized.jar" />
+            <!-- 不预校验 -->
+            <arg value="-dontpreverify" />
+            <arg value="-dontoptimize" />
+            <!-- 混淆时不会产生形形色色的类名 -->
+            <arg value="-dontusemixedcaseclassnames" />
+            <arg value="-repackageclasses &apos;&apos;" />
+            <arg value="-allowaccessmodification" />
+            <!-- 忽略警告 -->
+            <arg value="-ignorewarning"/>
+            <!-- 混淆配置的引璿-->           
+            <arg value="@${proguard-file}"/>             
+        </java>
+        <delete file="temp.jar" />
+        <delete dir="${outdir-classes}" />
+        <mkdir dir="${outdir-classes}" /> 
+        <unzip
+            dest="${outdir-classes}" src="optimized.jar" />
+        <delete file="optimized.jar" />
+    </target>
+    <!-- 宿class文件转化憿dex文件 -->  
+    <target name="dex" depends="compile">  
+        <echo>Converting compiled files and external libraries into a .dex file...</echo>  
+        <exec executable="${dx}" failonerror="true">  
+            <arg value="--dex" />  
+            <!-- 输出文件 -->  
+            <arg value="--output=${dex-ospath}" />  
+            <!-- 要生憿dex文件的源classes和libraries -->  
+            <arg value="${outdir-classes-ospath}" />  
+            <arg value="${external-lib-ospath}"/> 
+        </exec>  
+    </target> 
+	
+    <target name="dex_release">  
+        <echo>Converting compiled files and external libraries into a .dex file...</echo>  
+        <exec executable="${dx}" failonerror="true">  
+            <arg value="--dex" />  
+            <!-- 输出文件 -->  
+            <arg value="--output=${dex-ospath}" />  
+            <!-- 要生憿dex文件的源classes和libraries -->  
+            <arg value="${outdir-classes-ospath}" />  
+            <arg value="${external-lib-ospath}"/> 
+        </exec>  
+    </target> 
+	
+	<target name="assetFile-exists">
+        <echo>assets file is exists?</echo>
+        <condition property="fileIsExists">   
+		   <available file="${asset-dir}" type="dir"/> 
+      </condition>
+      <antcall target="package-res-and-assets">  
+        </antcall>  
+        <antcall target="package-res">  
+        </antcall> 
+    </target>
+	
+    <!-- 将资源文件放进输出目录-->  
+    <target name="package-res-and-assets" if="fileIsExists">  
+        <echo>Packaging resources and assets...</echo>  
+        <exec executable="${aapt}" failonerror="true">  
+            <arg value="package" />  
+            <arg value="-f" />  
+            <arg value="-M" />  
+            <arg value="${manifest-xml}" />  
+            <arg value="-S" />  
+            <arg value="${resource-dir}" />
+            <arg value="-S"/>
+            <arg value="${library-dir1}/res"/> 
+			<arg value="-S"/>
+            <arg value="${library-dir2}/res"/>  			
+            <arg value="-A" />  
+            <arg value="${asset-dir}" />  
+            <arg value="-I" />  
+            <arg value="${android-jar}" />  
+            <arg value="-F" />  
+            <arg value="${resources-package}" />  
+            <arg value="--auto-add-overlay" />
+        </exec>  
+    </target>
+	
+    <target name="package-res"  unless="fileIsExists">  
+        <echo>Packaging resources...</echo>  
+        <exec executable="${aapt}" failonerror="true" >  
+            <arg value="package" />  
+            <arg value="-f" />  
+            <arg value="-M" />  
+            <arg value="${manifest-xml}" />  
+            <arg value="-S" />  
+            <arg value="${resource-dir}" />   
+			<arg value="-S"/>
+            <arg value="${library-dir1}/res"/>  
+			<arg value="-S" />
+			<arg value="${library-dir2}/res"/>  
+            <arg value="-I" />  
+            <arg value="${android-jar}" />  
+            <arg value="-F" />  
+            <arg value="${resources-package}" />  
+			<arg value="--auto-add-overlay" />
+        </exec>  
+    </target>
+    <!-- 打包成未签证的apk -->  
+    <target name="package" depends="dex, assetFile-exists">  
+        <echo>Packaging unsigned apk for release...</echo>  
+        <java classpath="${sdk-tools}/lib/sdklib.jar" classname="com.android.sdklib.build.ApkBuilderMain">  
+            <arg value="${out-unsigned-package-ospath}" />  
+            <arg value="-u" />  
+            <arg value="-z" />  
+            <arg value="${resources-package-ospath}" />  
+            <arg value="-f" />  
+            <arg value="${dex-ospath}" />  
+            <arg value="-rf" />    
+            <arg value="${srcdir-ospath}" />   
+        </java>  
+<!--         <exec executable="${apkbuilder}" failonerror="true">   -->
+<!--             <arg value="${out-unsigned-package-ospath}" />   -->
+<!--             <arg value="-u" />   -->
+<!--             <arg value="-z" />   -->
+<!--             <arg value="${resources-package-ospath}" />   -->
+<!--             <arg value="-f" />   -->
+<!--             <arg value="${dex-ospath}" />   -->
+<!--             <arg value="-rf" />   -->
+<!--             <arg value="${srcdir-ospath}" />   -->
+<!--         </exec>   -->
+        <echo>It will need to be signed with jarsigner before being published.</echo>  
+    </target>  
+    
+	<target name="package_release" depends="dex_release, assetFile-exists">  
+        <echo>Packaging unsigned apk for release...</echo> 
+        <java classpath="${sdk-tools}/lib/sdklib.jar" classname="com.android.sdklib.build.ApkBuilderMain">  
+            <arg value="${out-unsigned-package-ospath}" />  
+            <arg value="-u" />  
+            <arg value="-z" />  
+            <arg value="${resources-package-ospath}" />  
+            <arg value="-f" />  
+            <arg value="${dex-ospath}" />  
+            <arg value="-rf" />    
+            <arg value="${srcdir-ospath}" />   
+        </java>   
+        <echo>It will need to be signed with jarsigner before being published.</echo>  
+    </target>
+	
+    <!-- 对apk进行签证 -->  
+    <target name="jarsigner" depends="package">  
+        <echo>Packaging signed apk for release...</echo>  
+        <java failonerror="true" fork="true" jar="${keystore-jar}" >
+            <arg value="${keystore-pem}" />  
+            <arg value="${keystore-pk8}" />
+            <arg value="${out-unsigned-package-ospath}"/>  
+            <arg value="${out-signed-package-ospath}" />  
+            </java>
+        
+<!--          <exec executable="${jarsigner}" failonerror="true">  
+            <arg value="-keystore" />  
+            <arg value="${keystore-file}" />  
+            <arg value="-storepass" />  
+            <arg value="talpa-1" />  
+            <arg value="-keypass" />  
+            <arg value="talpa-1" />  
+            <arg value="-signedjar" />  
+            <arg value="${out-signed-package-ospath}" />  
+            <arg value="${out-unsigned-package-ospath}"/>
+ -->  
+            <!-- 不要忘了证书的别县-->  
+<!--             <arg value="androidplatformkey"/>  
+        </exec>   -->
+    </target>
+    <!-- 对apk进行签证 -->  
+    <target name="jarsigner_release" depends="package_release">  
+        <echo>Packaging signed apk for release...</echo>  
+         <java  failonerror="true" fork="true"  jar="${keystore-jar}" > 
+             <arg value="${keystore-pem}" />  
+             <arg value="${keystore-pk8}" />
+             <arg value="${out-unsigned-package-ospath}"/>  
+             <arg value="${out-signed-package-ospath}" />  
+             </java>
+<!--         
+        <exec executable="${jarsigner}" failonerror="true">  
+            <arg value="-keystore" />  
+            <arg value="${keystore-file}" />  
+            <arg value="-storepass" />  
+            <arg value="talpa-1" />  
+            <arg value="-keypass" />  
+            <arg value="talpa-1" />  
+            <arg value="-signedjar" />  
+            <arg value="${out-signed-package-ospath}" />  
+            <arg value="${out-unsigned-package-ospath}"/>  
+ -->
+<!--             不要忘了证书的别县  -->
+<!--             <arg value="androidplatformkey"/>  
+            
+        </exec>  -->  
+    </target>
+	<!-- 测试版本发布 -->  
+    <target name="debug" depends="jarsigner">  
+        <delete file="${out-unsigned-package-ospath}"/>  
+        <echo>debug APK is released. path:${out-signed-package-ospath}</echo>  
+    </target>
+    <!-- 发布 -->  
+    <target name="release" depends="jarsigner_release">  
+        <!-- 删除未签证apk -->  
+        <delete file="${out-unsigned-package-ospath}"/>  
+        <echo>APK is released. path:${out-signed-package-ospath}</echo>  
+    </target> 
+</project>
diff --git "a/SystemUI/build_windows--\351\200\232\347\237\245\346\240\217.xml" "b/SystemUI/build_windows--\351\200\232\347\237\245\346\240\217.xml"
index 72ed7f1..6a350e9 100644
--- "a/SystemUI/build_windows--\351\200\232\347\237\245\346\240\217.xml"
+++ "b/SystemUI/build_windows--\351\200\232\347\237\245\346\240\217.xml"
@@ -90,7 +90,8 @@
 <!-- 应用名称 -->  
     <property name="appName" value="${ant.project.name}"/>  
     <!-- SDK目录(获取操作系统环境变量ANDROID_SDK_HOME的便 -->  
-    <property name="sdk-folder" value="${env.Android_SDK_HOME}" />   
+    <property name="sdk-folder" value="D:/Tools/Android/adt-bundle-windows-x86_64-20140702/sdk" />  
+    <!--  <property name="sdk-folder" value="${env.Android_SDK_HOME}" />   -->    
     <!-- SDK指定平台目录 -->  
     <property name="sdk-platform-folder" value="${sdk-folder}/platforms/android-23"/>  
     <!-- SDK中tools目录 -->  
diff --git a/SystemUI/src/com/android/systemui/qs/tiles/DndTile.java b/SystemUI/src/com/android/systemui/qs/tiles/DndTile.java
index 781ab1c..ae0db02 100644
--- a/SystemUI/src/com/android/systemui/qs/tiles/DndTile.java
+++ b/SystemUI/src/com/android/systemui/qs/tiles/DndTile.java
@@ -37,6 +37,7 @@ import com.android.systemui.SysUIToast;
 import com.android.systemui.qs.QSTile;
 import com.android.systemui.statusbar.policy.ZenModeController;
 import com.android.systemui.volume.ZenModePanel;
+import android.util.Log;
 
 /** Quick settings tile: Do not disturb **/
 public class DndTile extends QSTile<QSTile.BooleanState> {
@@ -66,6 +67,7 @@ public class DndTile extends QSTile<QSTile.BooleanState> {
 
     public DndTile(Host host) {
         super(host);
+	 Log.d("weiliji" , "yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy weiliji show the trace info  "+ Log.getStackTraceString(new Throwable()));     
         mController = host.getZenModeController();
         mDetailAdapter = new DndDetailAdapter();
         mContext.registerReceiver(mReceiver, new IntentFilter(ACTION_SET_VISIBLE));
diff --git a/SystemUI/src/com/android/systemui/statusbar/phone/NotificationPanelView.java b/SystemUI/src/com/android/systemui/statusbar/phone/NotificationPanelView.java
index 2797c93..c7d96de 100644
--- a/SystemUI/src/com/android/systemui/statusbar/phone/NotificationPanelView.java
+++ b/SystemUI/src/com/android/systemui/statusbar/phone/NotificationPanelView.java
@@ -65,6 +65,7 @@ import com.android.systemui.statusbar.stack.NotificationStackScrollLayout;
 import com.android.systemui.statusbar.stack.StackStateAnimator;
 
 import java.util.List;
+import android.util.Log;
 
 public class NotificationPanelView extends PanelView implements
         ExpandableView.OnHeightChangedListener, ObservableScrollView.Listener,
@@ -72,8 +73,9 @@ public class NotificationPanelView extends PanelView implements
         KeyguardAffordanceHelper.Callback, NotificationStackScrollLayout.OnEmptySpaceClickListener,
         HeadsUpManager.OnHeadsUpChangedListener {
 
-    private static final boolean DEBUG = false;
-
+    private static final boolean DEBUG = true;  //weiliji modify
+    public static final String TAG = NotificationPanelView.class.getSimpleName();
+ 
     // Cap and total height of Roboto font. Needs to be adjusted when font for the big clock is
     // changed.
     private static final int CAP_HEIGHT = 1456;
@@ -468,7 +470,7 @@ public class NotificationPanelView extends PanelView implements
     }
 
     public void setQsExpansionEnabled(boolean qsExpansionEnabled) {
-        mQsExpansionEnabled = qsExpansionEnabled;
+        //mQsExpansionEnabled = qsExpansionEnabled;   //weiliji remove temp
         mHeader.setClickable(qsExpansionEnabled);
     }
 
@@ -853,9 +855,10 @@ public class NotificationPanelView extends PanelView implements
         final float y = event.getY(pointerIndex);
         final float x = event.getX(pointerIndex);
         final float h = y - mInitialTouchY;
-
+        logf("onQsTouch() touch event = " + event.getActionMasked() );
         switch (event.getActionMasked()) {
             case MotionEvent.ACTION_DOWN:
+		   logf("onQsTouch() touch event = MotionEvent.ACTION_DOWN "  );
                 mQsTracking = true;
                 mInitialTouchY = y;
                 mInitialTouchX = x;
@@ -866,6 +869,7 @@ public class NotificationPanelView extends PanelView implements
                 break;
 
             case MotionEvent.ACTION_POINTER_UP:
+		   logf("onQsTouch() touch event = MotionEvent.ACTION_POINTER_UP "  );
                 final int upPointer = event.getPointerId(event.getActionIndex());
                 if (mTrackingPointer == upPointer) {
                     // gesture is ongoing, find a new pointer to track
@@ -880,6 +884,7 @@ public class NotificationPanelView extends PanelView implements
                 break;
 
             case MotionEvent.ACTION_MOVE:
+                logf("onQsTouch() touch event = MotionEvent.ACTION_MOVE "  );
                 setQsExpansion(h + mInitialHeightOnTouch);
                 if (h >= getFalsingThreshold()) {
                     mQsTouchAboveFalsingThreshold = true;
@@ -889,6 +894,7 @@ public class NotificationPanelView extends PanelView implements
 
             case MotionEvent.ACTION_UP:
             case MotionEvent.ACTION_CANCEL:
+                logf("onQsTouch() touch event = MotionEvent.ACTION_UP/ACTION_CANCEL"  );
                 mQsTracking = false;
                 mTrackingPointer = -1;
                 trackMovement(event);
@@ -928,6 +934,8 @@ public class NotificationPanelView extends PanelView implements
 
     @Override
     public void onOverscrollTopChanged(float amount, boolean isRubberbanded) {
+        logf("onOverscrollTopChanged() amount = " + amount + ",  isRubberbanded = " + isRubberbanded );
+        logf("weiliji show the trace info  "+ Log.getStackTraceString(new Throwable()));     
         cancelQsAnimation();
         if (!mQsExpansionEnabled) {
             amount = 0f;
@@ -974,6 +982,8 @@ public class NotificationPanelView extends PanelView implements
     }
 
     private void setQsExpanded(boolean expanded) {
+        logf("setQsExpanded() expanded = " + expanded );
+        logf("weiliji show the trace info  "+ Log.getStackTraceString(new Throwable()));     
         boolean changed = mQsExpanded != expanded;
         if (changed) {
             mQsExpanded = expanded;
@@ -1270,6 +1280,7 @@ public class NotificationPanelView extends PanelView implements
     }
 
     private void setQsExpansion(float height) {
+        logf("setQsExpansion() height = " + height );
         height = Math.min(Math.max(height, mQsMinExpansionHeight), mQsMaxExpansionHeight);
         mQsFullyExpanded = height == mQsMaxExpansionHeight;
         if (height > mQsMinExpansionHeight && !mQsExpanded && !mStackScrollerOverscrolling) {
@@ -1333,13 +1344,15 @@ public class NotificationPanelView extends PanelView implements
     }
 
     private void setQsTranslation(float height) {
+	 logf(" weiliji  setQsTranslation() height    = " + height);
+	 
         if (!mHeaderAnimating) {
             mQsContainer.setY(height - mQsContainer.getDesiredHeight() + getHeaderTranslation());
         }
         if (mKeyguardShowing && !mHeaderAnimating) {
             mHeader.setY(interpolate(getQsExpansionFraction(), -mHeader.getHeight(), 0));
         }
-    }
+    }  
 
     private float calculateQsTopPadding() {
         if (mKeyguardShowing
@@ -1506,6 +1519,7 @@ public class NotificationPanelView extends PanelView implements
     }
 
     private boolean isInSettings() {
+        logf("isInSettings() mQsExpanded = " + mQsExpanded );
         return mQsExpanded;
     }
 
@@ -2453,3 +2467,4 @@ public class NotificationPanelView extends PanelView implements
         return !tasks.isEmpty() && pkgName.equals(tasks.get(0).topActivity.getPackageName());
     }
 }
+
diff --git a/SystemUI/src/com/android/systemui/statusbar/phone/NotificationsQuickSettingsContainer.java b/SystemUI/src/com/android/systemui/statusbar/phone/NotificationsQuickSettingsContainer.java
index f705a76..7b5d38c 100644
--- a/SystemUI/src/com/android/systemui/statusbar/phone/NotificationsQuickSettingsContainer.java
+++ b/SystemUI/src/com/android/systemui/statusbar/phone/NotificationsQuickSettingsContainer.java
@@ -62,7 +62,7 @@ public class NotificationsQuickSettingsContainer extends FrameLayout
 
     @Override
     protected boolean drawChild(Canvas canvas, View child, long drawingTime) {
-	Log.d("weiliji",Log.getStackTraceString(new Throwable()));  
+	//  Log.d("weiliji",  "weiliji show the trace info"+ Log.getStackTraceString(new Throwable()));  
         boolean userSwitcherVisible = mInflated && mUserSwitcher.getVisibility() == View.VISIBLE;
         boolean statusBarVisible = mKeyguardStatusBar.getVisibility() == View.VISIBLE;
 
diff --git a/SystemUI/src/com/android/systemui/statusbar/phone/PanelView.java b/SystemUI/src/com/android/systemui/statusbar/phone/PanelView.java
index 0912696..5706a21 100644
--- a/SystemUI/src/com/android/systemui/statusbar/phone/PanelView.java
+++ b/SystemUI/src/com/android/systemui/statusbar/phone/PanelView.java
@@ -45,11 +45,13 @@ import java.io.FileDescriptor;
 import java.io.PrintWriter;
 
 public abstract class PanelView extends FrameLayout {
-    public static final boolean DEBUG = PanelBar.DEBUG;
-    public static final String TAG = PanelView.class.getSimpleName();
-
-    private final void logf(String fmt, Object... args) {
-        Log.v(TAG, (mViewName != null ? (mViewName + ": ") : "") + String.format(fmt, args));
+    public static final boolean DEBUG =  true ;//PanelBar.DEBUG;
+    public static final String TAG = PanelView.class.getSimpleName();  
+    // protected final String TAG = "PanelView." + getClass().getSimpleName();
+	
+    public void logf(String fmt, Object... args) {
+        //Log.v(TAG, (mViewName != null ? (mViewName + ": ") : "") + String.format(fmt, args));
+        Log.v("weiliji", (mViewName != null ? (mViewName + ": ") : "") + String.format(fmt, args));
     }
 
     protected PhoneStatusBar mStatusBar;
@@ -748,6 +750,8 @@ public abstract class PanelView extends FrameLayout {
     }
 
     public void setExpandedHeightInternal(float h) {
+        logf("setExpandedHeightInternal() h = " + h );
+		
         float fhWithoutOverExpansion = getMaxPanelHeight() - getOverExpansionAmount();
         if (mHeightAnimator == null) {
             float overExpansionPixels = Math.max(0, h - fhWithoutOverExpansion);
@@ -1097,4 +1101,7 @@ public abstract class PanelView extends FrameLayout {
     public void setHeadsUpManager(HeadsUpManager headsUpManager) {
         mHeadsUpManager = headsUpManager;
     }
+
 }
+
+
diff --git a/SystemUI/src/com/android/systemui/statusbar/phone/QSTileHost.java b/SystemUI/src/com/android/systemui/statusbar/phone/QSTileHost.java
index e66c63b..e93b0d0 100644
--- a/SystemUI/src/com/android/systemui/statusbar/phone/QSTileHost.java
+++ b/SystemUI/src/com/android/systemui/statusbar/phone/QSTileHost.java
@@ -249,6 +249,7 @@ public class QSTileHost implements QSTile.Host, Tunable {
     }
 
     protected QSTile<?> createTile(String tileSpec) {
+        Log.d("weiliji", "createTile(String tileSpec)  xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx " );
         if (tileSpec.equals("wifi")) return new WifiTile(this);
         else if (tileSpec.equals("bt")) return new BluetoothTile(this);
         else if (tileSpec.equals("inversion")) return new ColorInversionTile(this);
diff --git a/SystemUI/sysui-push.sh b/SystemUI/sysui-push.sh
index 40bb259..da50354 100644
--- a/SystemUI/sysui-push.sh
+++ b/SystemUI/sysui-push.sh
@@ -1,6 +1,6 @@
 #!/bin/sh
 adb remount
-adb push ./bin/SystemUI.apk system/priv-app/SystemUI/
+adb push F:/code/qucii/qucii/SystemUI/bin/SystemUI.apk system/priv-app/SystemUI/
 #adb shell am force-stop com.android.systemui
 PROCESS=`adb shell ps |grep $com.android.systemui|grep -v grep|grep -v PPID |awk '{ print $2}'`
 # com.android.systemui
@@ -10,4 +10,7 @@ for i in $PROCESS
 do
   echo " adb shell Kill the $1 process [ $i ]"
   adb shell kill -9 $i
-done
\ No newline at end of file
+done
+
+#  echo 按任意键继续
+#read -n 1
-- 
2.8.3.windows.1

